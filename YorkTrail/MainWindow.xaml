<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:YorkTrail"
    xmlns:Collections="clr-namespace:System.Collections;assembly=System.Runtime" x:Class="YorkTrail.MainWindow"
    mc:Ignorable="d"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
    Title="YorkTrail" Height="316" Width="544" AllowDrop="True" Drop="FileDrop" MaxWidth="544" MinWidth="544" MinHeight="316" Background="WhiteSmoke"
    x:Name="mainWindow"
    Loaded="mainWindow_Loaded"
    Closing="mainWindow_Closing"
    WindowStartupLocation="Manual"
    Topmost="{Binding Settings.AlwaysOnTop}"
    >
    <Window.Resources>
        <ResourceDictionary>
            <local:DictionaryToKeyConverter x:Key="DictionaryToKeyConverter"/>
            <local:PathShortenConverter x:Key="PathShortenConverter"/>
            <local:SelectedDeviceConverter x:Key="SelectedDeviceConverter"/>
            <local:TimeToStringConverter x:Key="TimeToStringConverter"/>
            <local:EnumToBooleanConverter x:Key="EnumToBooleanConverter"/>
            <local:FloatToBooleanConverter x:Key="FloatToBooleanConverter"/>
            <local:LogScaleConverter x:Key="LogScaleConverter"/>
            <local:BooleanNegativeConverter x:Key="BooleanNegativeConverter"/>
            <!--ボリュームスライダー-->
            <!--#region -->
            <Style x:Key="RepeatButtonPink" TargetType="{x:Type RepeatButton}">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="Background" Value="Pink"/>
                <Setter Property="Focusable" Value="false"/>
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="BorderBrush" Value="Gray"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="RepeatButtonRed" TargetType="{x:Type RepeatButton}">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="Background" Value="OrangeRed"/>
                <Setter Property="Focusable" Value="false"/>
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="BorderBrush" Value="Gray"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <SolidColorBrush x:Key="SliderThumb.Static.Background" Color="#FFF0F0F0"/>
            <SolidColorBrush x:Key="SliderThumb.Static.Border" Color="#FFACACAC"/>
            <SolidColorBrush x:Key="SliderThumb.Static.Foreground" Color="#FFE5E5E5"/>
            <SolidColorBrush x:Key="SliderThumb.MouseOver.Background" Color="#FFDCECFC"/>
            <SolidColorBrush x:Key="SliderThumb.MouseOver.Border" Color="#FF7Eb4EA"/>
            <SolidColorBrush x:Key="SliderThumb.Pressed.Background" Color="#FFDAECFC"/>
            <SolidColorBrush x:Key="SliderThumb.Pressed.Border" Color="#FF569DE5"/>
            <SolidColorBrush x:Key="SliderThumb.Disabled.Background" Color="#FFF0F0F0"/>
            <SolidColorBrush x:Key="SliderThumb.Disabled.Border" Color="#FFD9D9D9"/>
            <SolidColorBrush x:Key="SliderThumb.Track.Background" Color="#FFE7EAEA"/>
            <SolidColorBrush x:Key="SliderThumb.Track.Border" Color="#FFD6D6D6"/>
            <ControlTemplate x:Key="SliderThumbVerticalDefault" TargetType="{x:Type Thumb}">
                <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                    <Path x:Name="grip" Data="M0.5,0.5 L18.5,0.5 18.5,11.5 0.5,11.5z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" Stroke="{StaticResource SliderThumb.Static.Border}"/>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                        <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                    </Trigger>
                    <Trigger Property="IsDragging" Value="true">
                        <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                        <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                        <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="SliderThumbVerticalLeft" TargetType="{x:Type Thumb}">
                <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                    <Path x:Name="grip" Data="M 6,11 C6,11 0,5.5 0,5.5 0,5.5 6,0 6,0 6,0 18,0 18,0 18,0 18,11 18,11 18,11 6,11 6,11 z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" Stroke="{StaticResource SliderThumb.Static.Border}"/>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                        <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                    </Trigger>
                    <Trigger Property="IsDragging" Value="true">
                        <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                        <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                        <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="SliderThumbVerticalRight" TargetType="{x:Type Thumb}">
                <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                    <Path x:Name="grip" Data="M 12,11 C12,11 18,5.5 18,5.5 18,5.5 12,0 12,0 12,0 0,0 0,0 0,0 0,11 0,11 0,11 12,11 12,11 z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" Stroke="{StaticResource SliderThumb.Static.Border}"/>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                        <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                    </Trigger>
                    <Trigger Property="IsDragging" Value="true">
                        <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                        <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                        <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="SliderVertical" TargetType="{x:Type Slider}">
                <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition MinWidth="{TemplateBinding MinWidth}" Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TickBar x:Name="TopTick" Grid.Column="0" Fill="{TemplateBinding Foreground}" Margin="0,0,2,0" Placement="Left" Visibility="Collapsed" Width="4"/>
                        <TickBar x:Name="BottomTick" Grid.Column="2" Fill="{TemplateBinding Foreground}" Margin="2,0,0,0" Placement="Right" Visibility="Collapsed" Width="4"/>
                        <Border x:Name="TrackBackground" Background="{StaticResource SliderThumb.Track.Background}" BorderThickness="1" BorderBrush="{StaticResource SliderThumb.Track.Border}" Grid.Column="1" HorizontalAlignment="center" Margin="0,5" Width="18.0">
                            <Canvas Margin="-1,-6">
                                <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Visibility="Hidden" Width="20.0"/>
                            </Canvas>
                        </Border>
                        <Track x:Name="PART_Track" Grid.Column="1">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonRed}"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonPink}"/>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb x:Name="Thumb" Focusable="False" Height="11" OverridesDefaultStyle="True" Template="{StaticResource SliderThumbVerticalDefault}" VerticalAlignment="Top" Width="18"/>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="TickPlacement" Value="TopLeft">
                        <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                        <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbVerticalLeft}"/>
                        <Setter Property="Margin" TargetName="TrackBackground" Value="2,5,0,5"/>
                    </Trigger>
                    <Trigger Property="TickPlacement" Value="BottomRight">
                        <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                        <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbVerticalRight}"/>
                        <Setter Property="Margin" TargetName="TrackBackground" Value="0,5,2,5"/>
                    </Trigger>
                    <Trigger Property="TickPlacement" Value="Both">
                        <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                        <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                    </Trigger>
                    <Trigger Property="IsSelectionRangeEnabled" Value="true">
                        <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                    </Trigger>
                    <Trigger Property="IsKeyboardFocused" Value="true">
                        <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <Style x:Key="BigSlider" TargetType="{x:Type Slider}">
                <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Foreground" Value="{StaticResource SliderThumb.Static.Foreground}"/>
                <Setter Property="Template" Value="{StaticResource SliderVertical}"/>
            </Style>
            <!--#endregion-->
            <!--グレーツールバー-->
            <!--#region -->
            <SolidColorBrush x:Key="ToolBarButtonHover" Color="#21008BFF"/>
            <SolidColorBrush x:Key="ToolBarMenuBorder" Color="#FFA1ABB4"/>
            <SolidColorBrush x:Key="ToolBarSubMenuBackground" Color="WhiteSmoke"/>
            <SolidColorBrush x:Key="ToolBarHorizontalBackground" Color="WhiteSmoke"/>
            <SolidColorBrush x:Key="ToolBarVerticalBackground" Color="WhiteSmoke"/>
            <SolidColorBrush x:Key="ToolBarGripper" Color="#FF6D6D6D"/>
            <SolidColorBrush x:Key="ToolBarToggleButtonHorizontalBackground" Color="WhiteSmoke"/>
            <SolidColorBrush x:Key="ToolBarToggleButtonVerticalBackground" Color="WhiteSmoke"/>
            <Style x:Key="ToolBarMainPanelBorderStyle" TargetType="{x:Type Border}">
                <Setter Property="Margin" Value="0,0,11,0"/>
                <Setter Property="CornerRadius" Value="3,3,3,3"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                        <Setter Property="CornerRadius" Value="0,0,0,0"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="ToolBarThumbStyle" TargetType="{x:Type Thumb}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border Background="Transparent" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                <Rectangle>
                                    <Rectangle.Fill>
                                        <DrawingBrush TileMode="Tile" ViewboxUnits="Absolute" Viewbox="0,0,4,4" Viewport="0,0,4,4" ViewportUnits="Absolute">
                                            <DrawingBrush.Drawing>
                                                <DrawingGroup>
                                                    <GeometryDrawing Brush="White" Geometry="M 1 1 L 1 3 L 3 3 L 3 1 z"/>
                                                    <GeometryDrawing Brush="{StaticResource ToolBarGripper}" Geometry="M 0 0 L 0 2 L 2 2 L 2 0 z"/>
                                                </DrawingGroup>
                                            </DrawingBrush.Drawing>
                                        </DrawingBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Cursor" Value="SizeAll"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ToolBarHorizontalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Background" Value="{StaticResource ToolBarToggleButtonHorizontalBackground}"/>
                <Setter Property="MinHeight" Value="0"/>
                <Setter Property="MinWidth" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border x:Name="Bd" Background="{TemplateBinding Background}" CornerRadius="0,3,3,0" SnapsToDevicePixels="true">
                                <Canvas HorizontalAlignment="Right" Height="7" Margin="7,2,2,2" SnapsToDevicePixels="true" VerticalAlignment="Bottom" Width="6">
                                    <Path Data="M 1 1.5 L 6 1.5" Stroke="White"/>
                                    <Path Data="M 0 0.5 L 5 0.5" Stroke="{TemplateBinding Foreground}"/>
                                    <Path Data="M 0.5 4 L 6.5 4 L 3.5 7 Z" Fill="White"/>
                                    <Path Data="M -0.5 3 L 5.5 3 L 2.5 6 Z" Fill="{TemplateBinding Foreground}"/>
                                </Canvas>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{StaticResource ToolBarGripper}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="ToolBarVerticalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Background" Value="{StaticResource ToolBarToggleButtonVerticalBackground}"/>
                <Setter Property="MinHeight" Value="0"/>
                <Setter Property="MinWidth" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border x:Name="Bd" Background="{TemplateBinding Background}" CornerRadius="0,0,3,3" SnapsToDevicePixels="true">
                                <Canvas HorizontalAlignment="Right" Height="6" Margin="2,7,2,2" SnapsToDevicePixels="true" VerticalAlignment="Bottom" Width="7">
                                    <Path Data="M 1.5 1 L 1.5 6" Stroke="White"/>
                                    <Path Data="M 0.5 0 L 0.5 5" Stroke="{TemplateBinding Foreground}"/>
                                    <Path Data="M 3.5 0.5 L 7 3.5 L 4 6.5 Z" Fill="White"/>
                                    <Path Data="M 3 -0.5 L 6 2.5 L 3 5.5 Z" Fill="{TemplateBinding Foreground}"/>
                                </Canvas>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{StaticResource ToolBarGripper}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="GrayToolBar" TargetType="{x:Type ToolBar}">
                <Setter Property="Background" Value="{StaticResource ToolBarHorizontalBackground}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToolBar}">
                            <Grid x:Name="Grid" Margin="3,1,1,1" SnapsToDevicePixels="true">
                                <Grid x:Name="OverflowGrid" HorizontalAlignment="Right">
                                    <ToggleButton x:Name="OverflowButton" ClickMode="Press" FocusVisualStyle="{x:Null}" IsEnabled="{TemplateBinding HasOverflowItems}" IsChecked="{Binding IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ToolBarHorizontalOverflowButtonStyle}"/>
                                    <Popup x:Name="OverflowPopup" AllowsTransparency="true" Focusable="false" IsOpen="{Binding IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" StaysOpen="false">
                                        <theme:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
                                            <Border x:Name="ToolBarSubMenuBorder" Background="{StaticResource ToolBarSubMenuBackground}" BorderThickness="1" BorderBrush="{StaticResource ToolBarMenuBorder}" RenderOptions.ClearTypeHint="Enabled">
                                                <ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel" KeyboardNavigation.DirectionalNavigation="Cycle" Focusable="true" FocusVisualStyle="{x:Null}" Margin="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle" WrapWidth="200"/>
                                            </Border>
                                        </theme:SystemDropShadowChrome>
                                    </Popup>
                                </Grid>
                                <Border x:Name="MainPanelBorder" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}" Style="{StaticResource ToolBarMainPanelBorderStyle}">
                                    <DockPanel KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.TabIndex="1">
                                        <Thumb x:Name="ToolBarThumb" Margin="-3,-1,0,0" Padding="6,5,1,6" Style="{StaticResource ToolBarThumbStyle}" Width="10"/>
                                        <ContentPresenter x:Name="ToolBarHeader" ContentSource="Header" HorizontalAlignment="Center" Margin="4,0,4,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                                        <ToolBarPanel x:Name="PART_ToolBarPanel" IsItemsHost="true" Margin="0,1,2,2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </DockPanel>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsOverflowOpen" Value="true">
                                    <Setter Property="IsEnabled" TargetName="ToolBarThumb" Value="false"/>
                                </Trigger>
                                <Trigger Property="Header" Value="{x:Null}">
                                    <Setter Property="Visibility" TargetName="ToolBarHeader" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="ToolBarTray.IsLocked" Value="true">
                                    <Setter Property="Visibility" TargetName="ToolBarThumb" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="HasDropShadow" SourceName="OverflowPopup" Value="true">
                                    <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                                    <Setter Property="SnapsToDevicePixels" TargetName="Shdw" Value="true"/>
                                    <Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
                                </Trigger>
                                <Trigger Property="Orientation" Value="Vertical">
                                    <Setter Property="Margin" TargetName="Grid" Value="1,3,1,1"/>
                                    <Setter Property="Style" TargetName="OverflowButton" Value="{StaticResource ToolBarVerticalOverflowButtonStyle}"/>
                                    <Setter Property="Height" TargetName="ToolBarThumb" Value="10"/>
                                    <Setter Property="Width" TargetName="ToolBarThumb" Value="Auto"/>
                                    <Setter Property="Margin" TargetName="ToolBarThumb" Value="-1,-3,0,0"/>
                                    <Setter Property="Padding" TargetName="ToolBarThumb" Value="5,6,6,1"/>
                                    <Setter Property="Margin" TargetName="ToolBarHeader" Value="0,0,0,4"/>
                                    <Setter Property="Margin" TargetName="PART_ToolBarPanel" Value="1,0,2,2"/>
                                    <Setter Property="DockPanel.Dock" TargetName="ToolBarThumb" Value="Top"/>
                                    <Setter Property="DockPanel.Dock" TargetName="ToolBarHeader" Value="Top"/>
                                    <Setter Property="HorizontalAlignment" TargetName="OverflowGrid" Value="Stretch"/>
                                    <Setter Property="VerticalAlignment" TargetName="OverflowGrid" Value="Bottom"/>
                                    <Setter Property="Placement" TargetName="OverflowPopup" Value="Right"/>
                                    <Setter Property="Margin" TargetName="MainPanelBorder" Value="0,0,0,11"/>
                                    <Setter Property="Background" Value="{StaticResource ToolBarVerticalBackground}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <!--#endregion-->
            <!--チェックが黒くないMenuItem-->
            <!--#region -->
            <SolidColorBrush x:Key="Menu.Static.BackGround" Color="AliceBlue"/>
            <SolidColorBrush x:Key="Menu.Static.BorderBrush" Color="AliceBlue"/>
            <SolidColorBrush x:Key="Menu.Static.Foreground" Color="#FF212121"/>
            <SolidColorBrush x:Key="Menu.Disabled.Foreground" Color="#FF707070"/>
            <SolidColorBrush x:Key="MenuItem.Selected.Background" Color="#3D26A0DA"/>
            <SolidColorBrush x:Key="MenuItem.Selected.Border" Color="#FF26A0DA"/>
            <SolidColorBrush x:Key="MenuItem.Highlight.Background" Color="#3D26A0DA"/>
            <SolidColorBrush x:Key="MenuItem.Highlight.Border" Color="#FF26A0DA"/>
            <SolidColorBrush x:Key="MenuItem.Highlight.Disabled.Background" Color="#0A000000"/>
            <SolidColorBrush x:Key="MenuItem.Highlight.Disabled.Border" Color="#21000000"/>
            <Geometry x:Key="Checkmark">F1 M 10.0,1.2 L 4.7,9.1 L 4.5,9.1 L 0,5.2 L 1.3,3.5 L 4.3,6.1L 8.3,0 L 10.0,1.2 Z</Geometry>
            <ControlTemplate x:Key="MenuItemTemplate" TargetType="{x:Type MenuItem}">
                <Border x:Name="templateRoot" Background="{StaticResource Menu.Static.BackGround}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource Menu.Static.BorderBrush}" Height="22" SnapsToDevicePixels="true">
                    <Grid Margin="-1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                            <ColumnDefinition Width="7"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="30"/>
                            <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                            <ColumnDefinition Width="20"/>
                        </Grid.ColumnDefinitions>
                        <ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                        <Border x:Name="GlyphPanel" Background="{StaticResource MenuItem.Selected.Background}" BorderThickness="1" BorderBrush="{StaticResource MenuItem.Selected.Border}" ClipToBounds="False" HorizontalAlignment="Center" Height="22" Margin="-1,0,0,0" VerticalAlignment="Center" Visibility="Hidden" Width="22">
                            <Path x:Name="Glyph" Data="{StaticResource Checkmark}" FlowDirection="LeftToRight" Fill="{StaticResource Menu.Static.Foreground}" Height="11" Width="10"/>
                        </Border>
                        <ContentPresenter x:Name="menuHeaderContainer" ContentSource="Header" Grid.Column="2" HorizontalAlignment="Left" Margin="0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                        <TextBlock x:Name="menuGestureText" Grid.Column="4" Margin="{TemplateBinding Padding}" Opacity="0.7" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center"/>
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="Icon" Value="{x:Null}">
                        <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                        <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                    </Trigger>
                    <Trigger Property="IsHighlighted" Value="True">
                        <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Background}"/>
                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Border}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{StaticResource Menu.Disabled.Foreground}"/>
                        <Setter Property="Fill" TargetName="Glyph" Value="{StaticResource Menu.Disabled.Foreground}"/>
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsHighlighted" Value="True"/>
                            <Condition Property="IsEnabled" Value="False"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Disabled.Background}"/>
                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Disabled.Border}"/>
                    </MultiTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <!--#endregion-->
            <!--アイコンボタン-->
            <!--#region -->
            <Style x:Key="PathButton" TargetType="{x:Type Path}">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="True">
                        <Setter Property="Fill" Value="Black"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Fill" Value="LightGray"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <!--#endregion -->
        </ResourceDictionary>
    </Window.Resources>
    <Window.DataContext>
        <local:MainWindowViewModel/>
    </Window.DataContext>
    <Window.InputBindings>
        <KeyBinding Modifiers="{Binding Settings.KeyBinds, Converter={StaticResource DictionaryToKeyConverter}, ConverterParameter=Play}" Key="{Binding Settings.KeyBinds, Converter={StaticResource DictionaryToKeyConverter}, ConverterParameter=Play}" Command="{Binding PlayCommand}" CommandParameter="{Binding ElementName=mainWindow}"/>
        <KeyBinding Modifiers="{Binding Settings.KeyBinds, Converter={StaticResource DictionaryToKeyConverter}, ConverterParameter=Pause}" Key="{Binding Settings.KeyBinds, Converter={StaticResource DictionaryToKeyConverter}, ConverterParameter=Pause}" Command="{Binding PauseCommand}" CommandParameter="{Binding ElementName=mainWindow}"/>
        <KeyBinding Modifiers="{Binding Settings.KeyBinds, Converter={StaticResource DictionaryToKeyConverter}, ConverterParameter=Stop}" Key="{Binding Settings.KeyBinds, Converter={StaticResource DictionaryToKeyConverter}, ConverterParameter=Stop}" Command="{Binding PauseCommand}" CommandParameter="{Binding ElementName=mainWindow}"/>
        <KeyBinding Modifiers="{Binding Settings.KeyBinds, Converter={StaticResource DictionaryToKeyConverter}, ConverterParameter=FF}" Key="{Binding Settings.KeyBinds, Converter={StaticResource DictionaryToKeyConverter}, ConverterParameter=FF}" Command="{Binding FFCommand}" CommandParameter="{Binding ElementName=mainWindow}"/>
        <KeyBinding Modifiers="{Binding Settings.KeyBinds, Converter={StaticResource DictionaryToKeyConverter}, ConverterParameter=FR}" Key="{Binding Settings.KeyBinds, Converter={StaticResource DictionaryToKeyConverter}, ConverterParameter=FR}" Command="{Binding FRCommand}" CommandParameter="{Binding ElementName=mainWindow}"/>
        <KeyBinding Modifiers="{Binding Settings.KeyBinds, Converter={StaticResource DictionaryToKeyConverter}, ConverterParameter=ToStart}" Key="{Binding Settings.KeyBinds, Converter={StaticResource DictionaryToKeyConverter}, ConverterParameter=ToStart}" Command="{Binding ToStartCommand}" CommandParameter="{Binding ElementName=mainWindow}"/>
        <KeyBinding Modifiers="{Binding Settings.KeyBinds, Converter={StaticResource DictionaryToKeyConverter}, ConverterParameter=ToEnd}" Key="{Binding Settings.KeyBinds, Converter={StaticResource DictionaryToKeyConverter}, ConverterParameter=ToEnd}" Command="{Binding ToEndCommand}" CommandParameter="{Binding ElementName=mainWindow}"/>
    </Window.InputBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="56"/>
            <RowDefinition Height="50"/>
            <RowDefinition Height="42"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="20"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="60"/>
        </Grid.ColumnDefinitions>
        <ToolBarTray Grid.ColumnSpan="2" IsLocked="False" Background="WhiteSmoke">
            <ToolBar x:Name="MenuToolBar" Style="{StaticResource GrayToolBar}">
                <Menu Background="WhiteSmoke">
                    <MenuItem Height="20" Width="62" Header="ファイル(_F)" Padding="4,2,0,2">
                        <MenuItem Header="開く(_O)" Command="{Binding FileOpenCommand}" CommandParameter="{Binding ElementName=mainWindow}"/>
                        <MenuItem Header="閉じる(_C)" Command="{Binding FileCloseCommand}" CommandParameter="{Binding ElementName=mainWindow}"/>
                        <Separator/>
                        <MenuItem Header="終了(_X)" Command="{Binding ExitCommand}" CommandParameter="{Binding ElementName=mainWindow}"/>
                        <Separator/>
                        <MenuItem Header="最近使ったファイル(_F)" ItemsSource="{Binding Settings.RecentFiles, Mode=OneWay}">
                            <MenuItem.CommandBindings>
                                <CommandBinding Command="{x:Static local:StaticCommands.OpenRecentFile}" Executed="RecentFile_Clicked"/>
                            </MenuItem.CommandBindings>
                            <MenuItem.ItemTemplate>
                                <DataTemplate>
                                    <ContentPresenter Content="{Binding Converter={StaticResource PathShortenConverter}}"/>
                                </DataTemplate>
                            </MenuItem.ItemTemplate>
                            <MenuItem.ItemContainerStyle>
                                <Style TargetType="{x:Type MenuItem}">
                                    <Setter Property="Command" Value="{x:Static local:StaticCommands.OpenRecentFile}"/>
                                    <Setter Property="CommandParameter" Value="{Binding}"/>
                                </Style>
                            </MenuItem.ItemContainerStyle>
                        </MenuItem>
                    </MenuItem>
                    <MenuItem Height="20" Width="54" Header="編集(_E)" Padding="4,2,0,2">
                        <MenuItem Header="チャンネル(_C)">
                            <MenuItem Header="ステレオ(_S)" IsChecked="{Binding Channels, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=0}" Template="{DynamicResource MenuItemTemplate}" IsCheckable="True"/>
                            <MenuItem Header="左chのみ(_L)" IsChecked="{Binding Channels, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=1}" Template="{DynamicResource MenuItemTemplate}" IsCheckable="True"/>
                            <MenuItem Header="右chのみ(_R)" IsChecked="{Binding Channels, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=2}" Template="{DynamicResource MenuItemTemplate}" IsCheckable="True"/>
                            <MenuItem Header="左ch + 右ch(_P)" IsChecked="{Binding Channels, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=3}" Template="{DynamicResource MenuItemTemplate}" IsCheckable="True"/>
                            <MenuItem Header="左ch - 右ch(_M)" IsChecked="{Binding Channels, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=4}" Template="{DynamicResource MenuItemTemplate}" IsCheckable="True"/>
                        </MenuItem>
                        <MenuItem Header="テンポ(_T)">
                            <MenuItem Header="2倍速(_D)" IsChecked="{Binding Rate, Converter={StaticResource FloatToBooleanConverter}, ConverterParameter=2.0}" Template="{DynamicResource MenuItemTemplate}" IsCheckable="True"/>
                            <MenuItem Header="通常(_N)" IsChecked="{Binding Rate, Converter={StaticResource FloatToBooleanConverter}, ConverterParameter=1.0}" Template="{DynamicResource MenuItemTemplate}" IsCheckable="True"/>
                            <MenuItem Header="1/2倍速(_H)" IsChecked="{Binding Rate, Converter={StaticResource FloatToBooleanConverter}, ConverterParameter=0.5}" Template="{DynamicResource MenuItemTemplate}" IsCheckable="True"/>
                            <MenuItem Header="1/3倍速(_T)" IsChecked="{Binding Rate, Converter={StaticResource FloatToBooleanConverter}, ConverterParameter=0.33}" Template="{DynamicResource MenuItemTemplate}" IsCheckable="True"/>
                            <MenuItem Header="1/4倍速(_Q)" IsChecked="{Binding Rate, Converter={StaticResource FloatToBooleanConverter}, ConverterParameter=0.25}" Template="{DynamicResource MenuItemTemplate}" IsCheckable="True"/>
                        </MenuItem>
                        <MenuItem Header="ピッチ(_P)">
                            <MenuItem Header="2オクターブ上(_Q)" IsChecked="{Binding Pitch, Converter={StaticResource FloatToBooleanConverter}, ConverterParameter=4.0}" Template="{DynamicResource MenuItemTemplate}" IsCheckable="True"/>
                            <MenuItem Header="1オクターブ上(_D)" IsChecked="{Binding Pitch, Converter={StaticResource FloatToBooleanConverter}, ConverterParameter=2.0}" Template="{DynamicResource MenuItemTemplate}" IsCheckable="True"/>
                            <MenuItem Header="通常(_N)" IsChecked="{Binding Pitch, Converter={StaticResource FloatToBooleanConverter}, ConverterParameter=1.0}" Template="{DynamicResource MenuItemTemplate}" IsCheckable="True"/>
                            <MenuItem Header="1オクターブ下(_H)" IsChecked="{Binding Pitch, Converter={StaticResource FloatToBooleanConverter}, ConverterParameter=0.5}" Template="{DynamicResource MenuItemTemplate}" IsCheckable="True"/>
                        </MenuItem>
                        <MenuItem Header="バイパス(_B)" IsChecked="{Binding IsBypass}" Template="{DynamicResource MenuItemTemplate}" IsCheckable="True"/>
                        <Separator/>
                        <MenuItem Header="ループ再生(_L)" IsChecked="{Binding IsLoop}" Template="{DynamicResource MenuItemTemplate}" IsCheckable="True"/>
                        <MenuItem Header="再生区間リセット(_R)" Command="{Binding SelectionResetCommand}" CommandParameter="{Binding ElementName=mainWindow}" Template="{DynamicResource MenuItemTemplate}"/>
                        <MenuItem Header="再生区間拡大(_I)" Command="{Binding ZoomCommand}" CommandParameter="{Binding ElementName=mainWindow}" Template="{DynamicResource MenuItemTemplate}"/>
                        <MenuItem Header="再生区間縮小(_O)" Command="{Binding ZoomResetCommand}" CommandParameter="{Binding ElementName=mainWindow}" Template="{DynamicResource MenuItemTemplate}"/>
                    </MenuItem>
                    <MenuItem Height="20" Width="52" Header="設定(_S)" Padding="4,2,0,2">
                        <MenuItem Header="常に手前に表示(_T)" IsChecked="{Binding Settings.AlwaysOnTop}" Template="{DynamicResource MenuItemTemplate}" IsCheckable="True"/>
                        <MenuItem x:Name="DeviceSelector" Header="再生デバイス(_D)" ItemsSource="{Binding DeviceList, Mode=OneWay}">
                            <MenuItem.CommandBindings>
                                <CommandBinding Command="{x:Static local:StaticCommands.PlaybackDeviceSelect}" Executed="PlaybackDevice_Clicked"/>
                            </MenuItem.CommandBindings>
                            <MenuItem.ItemContainerStyle>
                                <Style TargetType="{x:Type MenuItem}">
                                    <Setter Property="IsChecked">
                                        <Setter.Value>
                                            <MultiBinding Converter="{StaticResource SelectedDeviceConverter}">
                                                <Binding ElementName="mainWindow" Path="DataContext.DeviceList" Mode="OneWay"/>
                                                <Binding ElementName="mainWindow" Path="DataContext.PlaybackDevice" Mode="OneWay"/>
                                                <Binding RelativeSource="{x:Static RelativeSource.Self}" Path="DataContext" Mode="OneWay"/>
                                            </MultiBinding>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Command" Value="{x:Static local:StaticCommands.PlaybackDeviceSelect}"/>
                                    <Setter Property="CommandParameter" Value="{Binding}"/>
                                </Style>
                            </MenuItem.ItemContainerStyle>
                        </MenuItem>
                    </MenuItem>
                    <MenuItem Height="20" Width="56" Header="ヘルプ(_H)" Padding="4,2,0,2">
                        <MenuItem Header="YorkTrailについて(_A)" Command="{Binding ShowAboutCommand}" CommandParameter="{Binding ElementName=mainWindow}"/>
                    </MenuItem>
                </Menu>
            </ToolBar>
            <ToolBar x:Name="IconToolBar" Style="{StaticResource GrayToolBar}">
                <Button Width="24" Height="24" Command="{Binding FileOpenCommand}" CommandParameter="{Binding ElementName=mainWindow}" ToolTip="ファイルを開く">
                    <Canvas Width="16" Height="16" RenderTransformOrigin="0.5,0.5">
                        <Canvas.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                                <TranslateTransform X="-3.5" Y="-3.5"/>
                            </TransformGroup>
                        </Canvas.RenderTransform>
                        <Path Style="{StaticResource PathButton}" Data="M6.1,10L4,18V8H21A2,2 0 0,0 19,6H12L10,4H4A2,2 0 0,0 2,6V18A2,2 0 0,0 4,20H19C19.9,20 20.7,19.4 20.9,18.5L23.2,10H6.1M19,18H6L7.6,12H20.6L19,18Z" />
                    </Canvas>
                </Button>
                <Button Width="24" Height="24" Command="{Binding FileCloseCommand}" CommandParameter="{Binding ElementName=mainWindow}" ToolTip="ファイルを閉じる">
                    <Canvas Width="16" Height="16" RenderTransformOrigin="0.5,0.5">
                        <Canvas.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                                <TranslateTransform X="-3.5" Y="-3.5"/>
                            </TransformGroup>
                        </Canvas.RenderTransform>
                        <Path Style="{StaticResource PathButton}" Data="M19,3H5A2,2 0 0,0 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5A2,2 0 0,0 19,3M19,19H5V5H19V19M17,8.4L13.4,12L17,15.6L15.6,17L12,13.4L8.4,17L7,15.6L10.6,12L7,8.4L8.4,7L12,10.6L15.6,7L17,8.4Z" />
                    </Canvas>
                </Button>
                <Separator/>
                <ToggleButton Width="24" Height="24" IsChecked="{Binding IsLoop}" ToolTip="ループ再生">
                    <Canvas Width="16" Height="16" RenderTransformOrigin="0.5,0.5">
                        <Canvas.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                                <TranslateTransform X="-3.5" Y="-3.5"/>
                            </TransformGroup>
                        </Canvas.RenderTransform>
                        <Path Style="{StaticResource PathButton}" Data="M17,17H7V14L3,18L7,22V19H19V13H17M7,7H17V10L21,6L17,2V5H5V11H7V7Z" />
                    </Canvas>
                </ToggleButton>
                <Button Width="24" Height="24" Command="{Binding OpenTempoCalcWindowCommand}" CommandParameter="{Binding ElementName=mainWindow}" ToolTip="テンポ計算ウィンドウ">
                    <Canvas Width="16" Height="16" RenderTransformOrigin="0.5,0.5">
                        <Canvas.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                                <TranslateTransform X="-3.5" Y="-3.5"/>
                            </TransformGroup>
                        </Canvas.RenderTransform>
                        <Path Style="{StaticResource PathButton}" Data="M12,1.75L8.57,2.67L4.06,19.53C4.03,19.68 4,19.84 4,20C4,21.11 4.89,22 6,22H18C19.11,22 20,21.11 20,20C20,19.84 19.97,19.68 19.94,19.53L18.58,14.42L17,16L17.2,17H13.41L16.25,14.16L14.84,12.75L10.59,17H6.8L10.29,4H13.71L15.17,9.43L16.8,7.79L15.43,2.67L12,1.75M11.25,5V14.75L12.75,13.25V5H11.25M19.79,7.8L16.96,10.63L16.25,9.92L14.84,11.34L17.66,14.16L19.08,12.75L18.37,12.04L21.2,9.21L19.79,7.8Z" />
                    </Canvas>
                </Button>
                <Separator/>
                <Button Width="24" Height="24" ToolTip="設定(工事中)" IsEnabled="False">
                    <Canvas Width="16" Height="16" RenderTransformOrigin="0.5,0.5">
                        <Canvas.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                                <TranslateTransform X="-3.5" Y="-3.5"/>
                            </TransformGroup>
                        </Canvas.RenderTransform>
                        <Path Style="{StaticResource PathButton}" Data="M12,15.5A3.5,3.5 0 0,1 8.5,12A3.5,3.5 0 0,1 12,8.5A3.5,3.5 0 0,1 15.5,12A3.5,3.5 0 0,1 12,15.5M19.43,12.97C19.47,12.65 19.5,12.33 19.5,12C19.5,11.67 19.47,11.34 19.43,11L21.54,9.37C21.73,9.22 21.78,8.95 21.66,8.73L19.66,5.27C19.54,5.05 19.27,4.96 19.05,5.05L16.56,6.05C16.04,5.66 15.5,5.32 14.87,5.07L14.5,2.42C14.46,2.18 14.25,2 14,2H10C9.75,2 9.54,2.18 9.5,2.42L9.13,5.07C8.5,5.32 7.96,5.66 7.44,6.05L4.95,5.05C4.73,4.96 4.46,5.05 4.34,5.27L2.34,8.73C2.21,8.95 2.27,9.22 2.46,9.37L4.57,11C4.53,11.34 4.5,11.67 4.5,12C4.5,12.33 4.53,12.65 4.57,12.97L2.46,14.63C2.27,14.78 2.21,15.05 2.34,15.27L4.34,18.73C4.46,18.95 4.73,19.03 4.95,18.95L7.44,17.94C7.96,18.34 8.5,18.68 9.13,18.93L9.5,21.58C9.54,21.82 9.75,22 10,22H14C14.25,22 14.46,21.82 14.5,21.58L14.87,18.93C15.5,18.67 16.04,18.34 16.56,17.94L19.05,18.95C19.27,19.03 19.54,18.95 19.66,18.73L21.66,15.27C21.78,15.05 21.73,14.78 21.54,14.63L19.43,12.97Z" />
                    </Canvas>
                </Button>
            </ToolBar>
        </ToolBarTray>
        <Border Grid.Row="1" Width="430" BorderBrush="DarkSlateGray" Background="#FFE8E4D4" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1">
            <Grid>
                <Label x:Name="TimeDisplay" Content="{Binding Time, Mode=OneWay, Converter={StaticResource TimeToStringConverter}}" FontSize="24" FontWeight="Bold" FontFamily="Tahoma" Foreground="DarkSlateGray" Margin="6,0,0,0"/>
                <StackPanel Orientation="Vertical" Width="260" HorizontalAlignment="Right" VerticalAlignment="Center">
                    <StackPanel Orientation="Horizontal">
                        <Label Content="L" Width="17" Height="20" Padding="5,1,5,1" FontWeight="Bold"/>
                        <ProgressBar Height="13" Width="237" Maximum="0" Minimum="-100" Value="{Binding RMSL, Mode=OneWay}" Background="#192F4F4F" Margin="2,3,2,3" Foreground="DarkSlateGray" BorderBrush="#192F4F4F"/>
                    </StackPanel>
                    <Rectangle Fill="LightSlateGray" Height="1" Width="256" HorizontalAlignment="Left" Margin="0,-1,0,0" SnapsToDevicePixels="True"/>
                    <StackPanel Orientation="Horizontal">
                        <Label Content="R" Width="17" Height="20" Padding="5,1,5,1" FontWeight="Bold"/>
                        <ProgressBar Height="13" Width="237" Maximum="0" Minimum="-100" Value="{Binding RMSR, Mode=OneWay}" Background="#192F4F4F" Margin="2,3,2,3" Foreground="DarkSlateGray" BorderBrush="#192F4F4F"/>
                    </StackPanel>
                </StackPanel>
            </Grid>
        </Border>
        <StackPanel Grid.Row="2" Orientation="Horizontal" Width="430" Height="44">
            <GroupBox Header="Channels" Margin="0,-5,0,-2" Width="170" IsEnabled="{Binding IsBypass, Converter={StaticResource BooleanNegativeConverter}}">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <RadioButton Content="S" IsChecked="{Binding Channels, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=0}" Style="{StaticResource {x:Type ToggleButton}}" Width="30" Height="20" ToolTip="ステレオ"/>
                    <RadioButton Content="L" IsChecked="{Binding Channels, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=1}" Style="{StaticResource {x:Type ToggleButton}}" Width="30" Height="20" ToolTip="左chのみ"/>
                    <RadioButton Content="R"  IsChecked="{Binding Channels, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=2}" Style="{StaticResource {x:Type ToggleButton}}" Width="30" Height="20" ToolTip="右chのみ"/>
                    <RadioButton Content="L+R" IsChecked="{Binding Channels, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=3}" Style="{StaticResource {x:Type ToggleButton}}" Width="30" Height="20" ToolTip="左ch + 右ch"/>
                    <RadioButton Content="L-R"  IsChecked="{Binding Channels, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=4}" Style="{StaticResource {x:Type ToggleButton}}" Width="30" Height="20" ToolTip="左ch - 右ch"/>
                </StackPanel>
            </GroupBox>
            <GroupBox Header="Tempo" Width="110" Margin="0,-5,0,-2" IsEnabled="{Binding IsBypass, Converter={StaticResource BooleanNegativeConverter}}">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <RadioButton Content="x2" IsChecked="{Binding Rate, Converter={StaticResource FloatToBooleanConverter}, ConverterParameter=2.0}" Style="{StaticResource {x:Type ToggleButton}}" Width="30" Height="20" ToolTip="2倍速"/>
                    <RadioButton Content="x1" IsChecked="{Binding Rate, Converter={StaticResource FloatToBooleanConverter}, ConverterParameter=1.0}" Style="{StaticResource {x:Type ToggleButton}}" Width="30" Height="20" ToolTip="通常"/>
                    <RadioButton Content="1/2" IsChecked="{Binding Rate, Converter={StaticResource FloatToBooleanConverter}, ConverterParameter=0.5}" Style="{StaticResource {x:Type ToggleButton}}" Width="30" Height="20" ToolTip="1/2倍速"/>
                </StackPanel>
            </GroupBox>
            <GroupBox Header="Pitch" Width="110" Margin="0,-5,0,-2" IsEnabled="{Binding IsBypass, Converter={StaticResource BooleanNegativeConverter}}">
                <StackPanel Grid.Row="3" Orientation="Horizontal" HorizontalAlignment="Center">
                    <RadioButton Content="x2" IsChecked="{Binding Pitch, Converter={StaticResource FloatToBooleanConverter}, ConverterParameter=2.0}" Style="{StaticResource {x:Type ToggleButton}}" Width="30" Height="20" ToolTip="1オクターブ上"/>
                    <RadioButton Content="x1" IsChecked="{Binding Pitch, Converter={StaticResource FloatToBooleanConverter}, ConverterParameter=1.0}" Style="{StaticResource {x:Type ToggleButton}}" Width="30" Height="20"  ToolTip="通常"/>
                    <RadioButton Content="1/2" IsChecked="{Binding Pitch, Converter={StaticResource FloatToBooleanConverter}, ConverterParameter=0.5}" Style="{StaticResource {x:Type ToggleButton}}" Width="30" Height="20" ToolTip="1オクターブ下"/>
                </StackPanel>
            </GroupBox>
            <ToggleButton x:Name="BypassButton" Content="Byp" IsChecked="{Binding IsBypass}" Width="30" Height="20" Margin="8,8,0,0" ToolTip="バイパス"/>
        </StackPanel>
        <StackPanel Orientation="Horizontal" Grid.Row="3" Width="430" Margin="0,-4,0,0">
            <GroupBox Header="LPF">
                <StackPanel Orientation="Horizontal" Margin="0,6,0,0">
                    <Slider Width="93" Value="{Binding LpfFreq, Converter={StaticResource LogScaleConverter}, ConverterParameter=10-22000, Delay=20, Mode=OneWayToSource}" Maximum="1" Minimum="0" VerticalAlignment="Top"/>
                    <ToggleButton x:Name="LpfOnButton" Content="ON" Command="{Binding LpfOnCommand}" CommandParameter="{Binding ElementName=mainWindow}" Width="30" Height="20" Margin="8,0,0,0" VerticalAlignment="Top" ToolTip="ローパスフィルタを有効にする"/>
                </StackPanel>
            </GroupBox>
            <GroupBox Header="HPF">
                <StackPanel Orientation="Horizontal" Margin="0,6,0,0">
                    <Slider VerticalAlignment="Top" Width="93" Value="{Binding HpfFreq, Converter={StaticResource LogScaleConverter}, ConverterParameter=10-22000, Delay=20, Mode=OneWayToSource}" Maximum="1" Minimum="0"/>
                    <ToggleButton x:Name="HpfOnButton" Content="ON" Command="{Binding HpfOnCommand}" CommandParameter="{Binding ElementName=mainWindow}" Width="30" Height="20" Margin="8,0,0,0" VerticalAlignment="Top" ToolTip="ハイパスフィルタを有効にする"/>
                </StackPanel>
            </GroupBox>
            <GroupBox Header="BPF">
                <StackPanel Orientation="Horizontal" Margin="0,6,0,0">
                    <Slider VerticalAlignment="Top" Width="93" Value="{Binding BpfFreq, Converter={StaticResource LogScaleConverter}, ConverterParameter=50-20000, Delay=20, Mode=OneWayToSource}" Maximum="1" Minimum="0"/>
                    <ToggleButton x:Name="BpfOnButton" Content="ON" Command="{Binding BpfOnCommand}" CommandParameter="{Binding ElementName=mainWindow}" Width="30" Height="20" Margin="8,0,0,0" VerticalAlignment="Top" ToolTip="バンドパスフィルタを有効にする"/>
                </StackPanel>
            </GroupBox>
        </StackPanel>
        <Grid Grid.Row="4">
            <ProgressBar x:Name="ProgressBar" HorizontalAlignment="Stretch" Height="30" VerticalAlignment="Bottom" Width="430" Value="{Binding Position}" Maximum="1" Foreground="#FF066AB0"/>
            <local:RangeSlider x:Name="RangeSlider" Width="430" Height="30" VerticalAlignment="Bottom" LowerValueChanged="RangeSlider_LowerValueChanged" MouseLeftButtonDown="RangeSlider_MouseLeftButtonDown" LowerSliderDragCompleted="RangeSlider_LowerSliderDragCompleted" UpperSliderDragCompleted="RangeSlider_UpperSliderDragCompleted" LowerValue="0" UpperValue="1" Margin="0,-8,0,0"/>
        </Grid>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Stretch" Grid.Row="5" Width="430">
            <Button Command="{Binding ToStartCommand}" CommandParameter="{Binding ElementName=mainWindow}" Width="58" Height="30" ToolTip="最初へ移動">
                <Canvas Width="24" Height="24">
                    <Path Fill="Black" Data="M0,6V18H2V6ZM11.5,12L20,18V6M11,18V6L2.5,12L11,18Z" />
                </Canvas>
            </Button>
            <Button Command="{Binding FRCommand}" CommandParameter="{Binding ElementName=mainWindow}" Width="58" Height="30" ToolTip="巻戻し">
                <Canvas Width="24" Height="24">
                    <Path Fill="Black" Data="M11.5,12L20,18V6M11,18V6L2.5,12L11,18Z" />
                </Canvas>
            </Button>
            <Button Command="{Binding StopCommand}" CommandParameter="{Binding ElementName=mainWindow}" Width="58" Height="30" ToolTip="停止">
                <Canvas Width="24" Height="24">
                    <Path Fill="Black" Data="M18,18H6V6H18V18Z" />
                </Canvas>
            </Button>
            <Button Command="{Binding PlayCommand}" CommandParameter="{Binding ElementName=mainWindow}" Width="82" Height="30" ToolTip="再生">
                <Canvas Width="24" Height="24">
                    <Path Fill="Black" Data="M8,5.14V19.14L19,12.14L8,5.14Z" />
                </Canvas>
            </Button>
            <Button Command="{Binding PauseCommand}" CommandParameter="{Binding ElementName=mainWindow}" Width="58" Height="30" ToolTip="一時停止">
                <Canvas Width="24" Height="24">
                    <Path Fill="Black" Data="M14,19H18V5H14M6,19H10V5H6V19Z" />
                </Canvas>
            </Button>
            <Button Command="{Binding FFCommand}" CommandParameter="{Binding ElementName=mainWindow}" Width="58" Height="30" ToolTip="早送り">
                <Canvas Width="24" Height="24">
                    <Path Fill="Black" Data="M13,6V18L21.5,12M4,18L12.5,12L4,6V18Z" />
                </Canvas>
            </Button>
            <Button Command="{Binding ToEndCommand}" CommandParameter="{Binding ElementName=mainWindow}" Width="58" Height="30" ToolTip="最後へ移動">
                <Canvas Width="24" Height="24">
                    <Path Fill="Black" Data="M13,6V18L21.5,12M4,18L12.5,12L4,6V18ZM22,6V18H24V6Z" />
                </Canvas>
            </Button>
        </StackPanel>
        <StatusBar Grid.Row="6" Grid.ColumnSpan="2" Background="WhiteSmoke">
            <Label Content="{Binding StatusText}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="0,-9,0,0"/>
        </StatusBar>
        <GroupBox Grid.Column="1" Grid.RowSpan="3" Grid.Row="1" Header="Vol" HorizontalAlignment="Left" Margin="0,0,0,0" Width="50">
            <Slider Style="{StaticResource BigSlider}" Grid.Column="1" Grid.RowSpan="5" Orientation="Vertical" Height="115" Maximum="1" Value="{Binding Volume}" Grid.Row="3" LargeChange="0.1" HorizontalAlignment="Center" Margin="2,4,0,0"/>
        </GroupBox>
        <Grid Grid.Row="4" Grid.RowSpan="2" Grid.Column="1">
            <StackPanel Orientation="Horizontal" VerticalAlignment="Top" Margin="0,17,0,0">
                <Button Width="24" Height="24" Command="{Binding CurrentToStartPositionCommand}" CommandParameter="{Binding ElementName=mainWindow}" ToolTip="現在位置を開始位置に">
                    <Canvas Width="16" Height="16" RenderTransformOrigin="0.5,0.5">
                        <Canvas.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                                <TranslateTransform X="-3.5" Y="-3.5"/>
                            </TransformGroup>
                        </Canvas.RenderTransform>
                        <Path Style="{StaticResource PathButton}" Data="M20 2H4C2.9 2 2 2.9 2 4V22L6 18H20C21.1 18 22 17.1 22 16V4C22 2.9 21.1 2 20 2M20 16H5.2L4 17.2V4H20V16M16 11V9H11.5L13.3 7.2L12 6L8 10L12 14L13.2 12.8L11.5 11H16Z" />
                    </Canvas>
                </Button>
                <Button Width="24" Height="24" Command="{Binding CurrentToEndPositionCommand}" CommandParameter="{Binding ElementName=mainWindow}" ToolTip="現在位置を終了位置に">
                    <Canvas Width="16" Height="16" RenderTransformOrigin="0.5,0.5">
                        <Canvas.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                                <TranslateTransform X="-3.5" Y="-3.5"/>
                            </TransformGroup>
                        </Canvas.RenderTransform>
                        <Path Style="{StaticResource PathButton}" Data="M20 2H4C2.9 2 2 2.9 2 4V22L6 18H20C21.1 18 22 17.1 22 16V4C22 2.9 21.1 2 20 2M20 16H5.2L4 17.2V4H20V16M8 9V11H12.5L10.7 12.8L12 14L16 10L12 6L10.8 7.2L12.5 9H8Z" />
                    </Canvas>
                </Button>
            </StackPanel>
            <StackPanel Orientation="Horizontal" VerticalAlignment="Top" Margin="0,52,0,0">
                <Button Width="24" Height="24" Command="{Binding ZoomCommand}" CommandParameter="{Binding ElementName=mainWindow}" ToolTip="再生区間拡大/縮小">
                    <Canvas Width="16" Height="16" RenderTransformOrigin="0.5,0.5">
                        <Canvas.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                                <TranslateTransform X="-3.5" Y="-3.5"/>
                            </TransformGroup>
                        </Canvas.RenderTransform>
                        <Path Style="{StaticResource PathButton}" Data="M15.5,14L20.5,19L19,20.5L14,15.5V14.71L13.73,14.43C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.43,13.73L14.71,14H15.5M9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14M12,10H10V12H9V10H7V9H9V7H10V9H12V10Z" />
                    </Canvas>
                </Button>
                <Button Width="24" Height="24" Command="{Binding SelectionResetCommand}" CommandParameter="{Binding ElementName=mainWindow}" ToolTip="再生区間リセット">
                    <Canvas Width="16" Height="16" RenderTransformOrigin="0.5,0.5">
                        <Canvas.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                                <TranslateTransform X="-3.5" Y="-3.5"/>
                            </TransformGroup>
                        </Canvas.RenderTransform>
                        <Path Style="{StaticResource PathButton}" Data="M9,11H15V8L19,12L15,16V13H9V16L5,12L9,8V11M2,20V4H4V20H2M20,20V4H22V20H20Z"/>
                    </Canvas>
                </Button>
            </StackPanel>
        </Grid>
    </Grid>
</Window>
